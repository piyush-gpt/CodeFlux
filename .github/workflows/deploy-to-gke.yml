name: Deploy to GKE

on:
  workflow_run:
    workflows: ["Build"]
    branches: [main]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
          
      - name: Configure Docker
        run: gcloud auth configure-docker
        
      - name: Authenticate to Google Cloud
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > /tmp/gcp-key.json
          gcloud auth activate-service-account --key-file=/tmp/gcp-key.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        
      - name: Install GKE Auth Plugin
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates gnupg
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt-get update && sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin
          
      - name: Get GKE Credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} \
            --zone ${{ secrets.GKE_REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }}
          
      - name: Deploy All Kubernetes Resources
        run: |
          # Apply all YAML files in ProductionSetup directory with validation disabled
          kubectl apply -f ProductionSetup/ --validate=false
          
      - name: Verify Deployments
        run: |
          kubectl rollout status deployment/frontend
          kubectl rollout status deployment/server
          kubectl rollout status deployment/poddeployment
          
      - name: Verify Other Resources
        run: |
          kubectl get all -n default
          kubectl get ingress -n default
          kubectl get resourcequota -n default